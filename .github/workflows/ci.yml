name: CI

permissions:
  actions: write
  contents: write

on: [push, pull_request]

jobs:
  build:
    name: .NET on ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v5

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Build
      run: dotnet build -c Release ValvePak/ValvePak.sln

    - name: Test
      run: dotnet test -c Release ValvePak/ValvePak.Test/ValvePak.Test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput='./lcov.info' /p:Include="[ValvePak*]*"

    - name: Create nupkg
      run: dotnet pack --configuration Release ValvePak/ValvePak/ValvePak.csproj

    - name: Upload nupkg
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        name: nupkg
        path: 'ValvePak/ValvePak/bin/Release/*.nupkg'

    - name: Upload test coverage
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./ValvePak/ValvePak.Test/lcov.info
        fail_ci_if_error: true
        verbose: true

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v5
      with:
        path: artifacts

    - name: Rename nupkg
      run: mv artifacts/nupkg/ValvePak.*.nupkg artifacts/ValvePak.nupkg

    - name: Display artifacts folder structure
      run: ls -Rl
      working-directory: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        files: artifacts/ValvePak.nupkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to NuGet Gallery
      run: dotnet nuget push artifacts/ValvePak.nupkg --api-key "${{ secrets.NUGET_API_KEY }}" --source "https://api.nuget.org/v3/index.json"
